cmake_minimum_required(VERSION 3.10)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

SET(PROJECT_VERSION_MAJOR 0)
SET(PROJECT_VERSION_MINOR 1)
SET(PROJECT_VERSION_PATCH 0)

project(ImStudio C CXX)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
if (WIN32 OR APPLE)
    include(glfw)
else()  # Linux
    find_package(glfw3 REQUIRED)
endif()

find_package(OpenGL REQUIRED)
find_package(Threads REQUIRED)


set_property(GLOBAL PROPERTY USE_FOLDERS ON)

include(CheckCXXCompilerFlag)

if (WIN32)
    add_compile_definitions(WIN32_LEAN_AND_MEAN)
    add_compile_definitions(NOMINMAX)
    add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
    add_compile_definitions(_SCL_SECURE_NO_WARNINGS)
else()
    find_program(CCACHE_FOUND ccache)
    if (CCACHE_FOUND)
        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
        set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
    endif (CCACHE_FOUND)
endif()

add_subdirectory(src)

if(UNIX AND NOT APPLE)
    SET(CPACK_PACKAGE_DIRECTORY ${CMAKE_BINARY_DIR}/packages)
    SET(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
    SET(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
    SET(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
    SET(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_SOURCE_DIR}/LICENSE)
    SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Raais <?? @ ?? .com>")
    SET(CPACK_DEBIAN_FILE_NAME "ImStudio-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}-Ubuntu.deb")
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "libglfw3")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE all)
    SET(CPACK_GENERATOR "TGZ;DEB")
    include(CPack)
endif()
